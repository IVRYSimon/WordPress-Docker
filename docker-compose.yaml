version: '3.8'

services:
  wordpress:
    build: ./wordpress
    container_name: wordpress
    ports:
      - "8080:80"
    volumes:
      - wordpress_data:/var/www/html
      - ./wordpress/wp-content/uploads:/var/www/html/wp-content/uploads
      - ./php/conf.d:/usr/local/etc/php/conf.d:ro
    env_file:
      - .env
    environment:
      WORDPRESS_DB_HOST: ${WORDPRESS_DB_HOST}
      WORDPRESS_DB_NAME: ${WORDPRESS_DB_NAME}
      WORDPRESS_DB_USER: ${WORDPRESS_DB_USER}
      WORDPRESS_DB_PASSWORD: ${WORDPRESS_DB_PASSWORD}
      WORDPRESS_CONFIG_EXTRA: |
        define('WP_CACHE', true);
        define('WP_MEMORY_LIMIT', '256M');
        define('WP_MAX_MEMORY_LIMIT', '512M');
        define('DISABLE_WP_CRON', true);
        define('DISALLOW_FILE_EDIT', true);
        define('WP_REDIS_CONFIG', [
            'host' => 'redis',
            'port' => 6379,
            'database' => 0,
            'timeout' => 1.0,
            'read_timeout' => 1.0,
            'compression' => 'zstd',
            'serializer' => 'igbinary',
            'async_flush' => true,
            'split_alloptions' => true,
            'prefetch' => true,
            'debug' => false,
        ]);
        define('WP_REDIS_DISABLED', false);
    depends_on:
      - db
      - redis
    networks:
      - wpnet
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 5

  nginx:
    build: ./nginx
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - wordpress_data:/var/www/html:ro
      - ./nginx/templates:/etc/nginx/templates:ro
      - ./nginx/conf.d:/etc/nginx/conf.d
      - certbot_conf:/etc/letsencrypt
      - certbot_www:/var/www/certbot
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    entrypoint: ["/docker-entrypoint.d/00-nginx-setup.sh"]
    depends_on:
      - wordpress
    env_file:
      - .env
    environment:
      - DOMAIN=${DOMAIN}
      - ENABLE_SSL=${ENABLE_SSL}
    networks:
      - wpnet
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 5

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - certbot_conf:/etc/letsencrypt
      - certbot_www:/var/www/certbot
    entrypoint: ["sh", "-c", "trap exit TERM; while :; do certbot renew --webroot -w /var/www/certbot; sleep 12h; done"]
    depends_on:
      - nginx
    networks:
      - wpnet

  db:
    image: mariadb:10.6
    container_name: mariadb
    volumes:
      - db_data:/var/lib/mysql
      - ./mysql/my.cnf:/etc/mysql/conf.d/my.cnf:ro
    env_file:
      - .env
    environment:
      MYSQL_DATABASE: ${WORDPRESS_DB_NAME}
      MYSQL_USER: ${WORDPRESS_DB_USER}
      MYSQL_PASSWORD: ${WORDPRESS_DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    networks:
      - wpnet
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 5

  redis:
    image: redis:alpine
    container_name: redis
    command: redis-server --requirepass ${REDIS_PASSWORD} --maxmemory 256mb --maxmemory-policy allkeys-lru
    env_file:
      - .env
    volumes:
      - redis_data:/data
    networks:
      - wpnet
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  cron:
    image: wordpress:cli
    container_name: cron
    env_file:
      - .env
    volumes:
      - ./wordpress:/var/www/html
    entrypoint: ["/bin/sh", "-c", "while :; do wp cron event run --due-now --path=/var/www/html --allow-root; sleep 60; done"]
    depends_on:
      - wordpress
    networks:
      - wpnet

volumes:
  wordpress_data:
  db_data:
  redis_data:
  certbot_conf:
  certbot_www:

networks:
  wpnet:
    driver: bridge
